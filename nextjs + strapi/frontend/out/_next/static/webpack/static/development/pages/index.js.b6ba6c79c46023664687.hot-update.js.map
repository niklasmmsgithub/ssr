{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.b6ba6c79c46023664687.hot-update.js","sources":["webpack:///./components/RestaurantList/index.js"],"sourcesContent":["import gql from \"graphql-tag\";\r\nimport Link from \"next/link\";\r\nimport { graphql } from \"react-apollo\";\r\n\r\nconst RestaurantList = (\r\n  { data: { loading, error, restaurants }, search },\r\n  req\r\n) => {\r\n  if (error) return \"Error loading restaurants\";\r\n\r\n  if (restaurants && restaurants.length) {\r\n    //searchQuery\r\n    const searchQuery = restaurants;\r\n\r\n    if (searchQuery.length != 0) {\r\n      return (\r\n        <div>\r\n          <div className=\"h-100\">\r\n            {searchQuery.map(res => (\r\n                <div key={res.id}>\r\n                    {res.name}\r\n                    <ul>\r\n                        {res.categories.map(c => <li key={c.id}>{c.name}</li>)}\r\n                    </ul>\r\n                </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <h1>No Restaurants Found</h1>;\r\n    }\r\n  }\r\n  return <h1>Loading</h1>;\r\n};\r\n\r\nconst query = gql`\r\n  {\r\n    restaurants {\r\n      id\r\n      name\r\n      description,\r\n      categories {\r\n          id,\r\n          name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nRestaurantList.getInitialProps = async ({ req }) => {\r\n  const res = await fetch(\"https://api.github.com/repos/zeit/next.js\");\r\n  const json = await res.json();\r\n  return { stars: json.stargazers_count };\r\n};\r\n\r\n// The `graphql` wrapper executes a GraphQL query and makes the results\r\n// available on the `data` prop of the wrapped component (RestaurantList)\r\nexport default graphql(query, {\r\n  props: ({ data }) => ({\r\n    data\r\n  })\r\n})(RestaurantList);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAGA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AADA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AADA;;;;A","sourceRoot":""}